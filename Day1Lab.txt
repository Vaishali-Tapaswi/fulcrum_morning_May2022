Lab 3 - Modify Day1.demo1
                @RestController
                @RequestMapping(value = "/")
                public class FirstController {
                    @GetMapping
                    public String method1() {
                        String str = "GetMapping in method1";
                        System.out.println(str);
                        return "<h1>" + str + "</h1>";
                    }
        + POST/PUT/DELETE
        --------Postman testing -> GET/POST/PUT/DELETE + HEAD/OPTIONS
       
                @RestController
                @RequestMapping(value = "/second")
                public class SecondController {
                    @GetMapping(value="/s1")
                    public String method1() {
                        String str = "GetMapping in method1";
                        System.out.println(str);
                        return "<h1>" + str + "</h1>";
                    }
        + /second/s1 and /second/s2
        -> observe error (404) for /second
        
        
        
                @RestController
                @RequestMapping(value = "/third")
                public class ThirdController {
                    @GetMapping(produces = MediaType.TEXT_PLAIN_VALUE)
                    public String method1() {
                        String str = "plain text in method1";
                        System.out.println(str);
                        return "plain text method1";
                    }

                    @GetMapping(produces = MediaType.TEXT_HTML_VALUE)
                    public String method2() {
                        String str = "html in method2";
                        System.out.println(str);
                        return "<h1>HTML Data " + str +"</h1>";
                    }

                }
        -> run from browser 
        -> postman -> Headers -> accept -> text/plain / text/html
        

Lab 2 -  Create a new maven project (Day1.demo2)
        Browser -> https://start.spring.io/
            Maven Project, java, 2.6.7
            Day1.demo2
            jar , java 8
            Add Dependencies  - no dependency
                Generate -> project
                or 
                explorer 
        Observe -> pom -> parent, dependency

        Create a bean 
            package demo;
            @Component
            public class Simple {
                public Simple(){
                    System.out.println("in Simple Constructor");
                }
                public void m1(){
                    System.out.println("m1 invoked ....");

                }
            }
    -> Create Application
            package demo;
        @SpringBootApplication
        public class Application {

            public static void main(String[] args) {
                ApplicationContext context = SpringApplication.run(Application.class, args);
                System.out.println("----------------After Context loaded ------------------");
                Simple simple1 = context.getBean("simple", Simple.class);
                simple1.m1();
                Simple simple2 = context.getBean("simple", Simple.class);
                simple2.m1();
                Simple simple3 = context.getBean("simple", Simple.class);
                simple3.m1();
            }
        }
        run -> observe -> where is simple instance created and how many instnaces created
        Modify Simple to include 1 class level annoations
            @Scope(value = "prototype")
        run -> observe -> where is simple instance created and how many instnaces created
        Modify Simple to include 1 class level annoations
            @Lazy
        run -> observe -> where is simple instance created and how many instnaces created
        
        Write a method  in application class
                @Bean
                @Scope(value = "prototype")
                public First first(){
                    System.out.println("in first method of Application class");
                    return new First();
                }
        
        Create First class
            package demo;

            public class First {
                public  First(){
                    System.out.println("in First Constructor...");
                }
                public void m1(){
                    System.out.println("m1 of First");
                }
            }
    try changing scope and @bean annotation

Info -
    https://docs.oracle.com/cd/B14098_01/core.1012/b14000/design.htm
    
    http://www.corej2eepatterns.com/index.htm

Lab 1 - Create a new maven project (Day1.demo1)
        Browser -> https://start.spring.io/
            Maven Project, java, 2.6.7
            Day1.demo1
            jar , java 8
            Add Dependencies - web
                Generate -> project
                or 
                explorer 
        Observe -> pom -> parent, dependency
        
        Write/Copy  Application (packaged)
            @SpringBootApplication(scanBasePackages = "controllers")
            public class Application {

                public static void main(String[] args) {
                    SpringApplication.run(Application.class, args);
                }
            }
       Write a class controllers.MyController
            package controllers;

            @RestController
            @RequestMapping(value = "/")
            public class MyController {
                @GetMapping
                public String hello(){
                    return "<h1>Hello World !!!</h1>";
                }
            }
    Run -> http://localhost:8080/
