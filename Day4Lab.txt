Lab 5 - Create new project Day4.demo2.JPAJPAexternal
        Entity - Emp 
                        String empno
                        String ename;
                        double salary -> random number
                        String project -> proj1,proj2
                        String department  (dept1,dept2,dept3
        Repo -   EmpRepo
                add 20 rows with different data (salary, project, department
        controllers - EmpController        
         Modify current project to support external database 
     
     Change application.yml
                spring:
                  jpa:
                    show-sql: true
                    hibernate:
                      ddl-auto: update
                  datasource:
                    url: jdbc:hsqldb:hsql://localhost/
                    username: SA
                    password:
                    driver-class: org.hsqldb.jdbc.JDBCDriver
        Run -> runserver(start the database)
            -> runManagerSwing -> client to database -> type - hsql database engine server
        Test -> 
        Check the table created
        
Lab 2 - Shift Repository code repos package
        Shift Dept to entities package
        Run -> see error
        Modify Application.java to include two more annoations
            @EntityScan( basePackages = "entities")
            @EnableJpaRepositories(basePackages = "repos")
       Run -> 
       Delete bean declarations from Application.java
       Create controllers.DeptController.java
                package controllers;
                import entities.Dept;
                import org.springframework.beans.factory.annotation.Autowired;
                import org.springframework.stereotype.Component;
                import repos.DeptRepo;

                @Component(value = "deptcontroller")
                public class DeptController {
                    @Autowired
                    private DeptRepo repo;

                    public void process(){
                        for (int i = 10;i<=50;i+=10){
                            Dept d = new Dept();
                            d.setDeptno(i);
                            d.setDname("DNAMEof"+i);
                            d.setLoc("Hyd");
                            if ((i %20)==0)
                                d.setLoc("Blr");
                            repo.save(d);
                        }
                        System.out.println("--------Delete Dept 50------------");
                        repo.deleteById(50);
                        System.out.println("-------Update Record 10----------- ");
                        Dept d= new Dept();
                        d.setDeptno(10);
                        d.setDname("HR");
                        d.setLoc("Pnq");
                        repo.save(d);
                        System.out.println("--------------- Listing ---------------");
                        for (Dept dept : repo.findAll()) {
                            System.out.println(dept);
                        }

                    }
                }
        Modify main method to invoke process from DeptController
        Run -
        
Lab 1- https://spring.io/guides/gs/accessing-data-jpa/
    new Project - Day4.demo1.datajpaembedded
      Dependencies - SPring Data jpa, HSQLDB
      copy pom file and application file
    Create demo.Dept
          @Entity
          @Table(name = "depttable")
          public class Dept {
              @Id
              private int deptno;
              private String dname;
              private String loc;
        + get/set + toString

   Modify demo.Application.java 
          package demo;

          @SpringBootApplication
          public class Application {
            @Bean
            public String simple(DeptRepo repo){
              System.out.println("in Simple ..." + repo);
              Dept d = new Dept();
              d.setDeptno(10);
              d.setDname("HR");
              d.setLoc("Hyd");
              repo.save(d);
              return "Success";
            }
            @Bean()
            @Scope(value="prototype")
            public String list(DeptRepo repo){
              System.out.println("in list ..." + repo);
              for (Dept dept : repo.findAll()) {
                System.out.println(dept);
              }
              return "Success";
            }


            public static void main(String[] args) {
              ApplicationContext ctx = SpringApplication.run(Application.class, args);
              ctx.getBean("list");

            }

          }
      Test
      Create Application.yml
           spring:
            jpa:
             show-sql: true
